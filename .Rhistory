geom_polygon(data = mujeres, aes( x = long, y = lat, group = group), fill="skyblue", color="white") +
geom_text(data = pibper$pibper, aes(x=x, y=y, label=generacion)) +
theme_void() +
coord_map()
ggplot() +
geom_polygon(data = mujeres, aes( x = long, y = lat, group = group), fill="skyblue", color="white") +
geom_text(data = mujeres, aes(x=x, y=y, label=generacion)) +
theme_void() +
coord_map()
install.packages("rgeos")
library(rgeos)
ggplot() +
geom_polygon(data = mujeres, aes( x = long, y = lat, group = group), fill="skyblue", color="white") +
geom_text(data = mujeres, aes(x=x, y=y, label=generacion)) +
theme_void() +
coord_map()
ggplot() +
geom_polygon(data = mujeres, aes( x = generacion, y = suici_no, group = generacion), fill="skyblue", color="white") +
geom_text(data = mujeres, aes(x=x, y=y, label=generacion)) +
theme_void() +
coord_map()
ggplot() +
geom_polygon(data = mujeres, aes(x = generacion, y = suici_no, group = generacion), fill="skyblue", color="white") +
geom_text(data = mujeres, aes(x=x, y=y, label=generacion)) +
theme_void() +
coord_map()
ggplot(mujeres, aes(x=edad, y=suici_no)) +
geom_point()
ggplot(mujeres, aes(x=edad, y=suici_no, size=depth)) +
geom_point(alpha=0.2)
colombia <- read_excel("C:/Users/acamp/Desktop/Semillero Datos/colombia.xlsx")
colombia2015 <- colombia[361:372,]
mujeres <- subset(colombia2015, sexo == "female")
pie(mujeres$suici_no, mujeres$edad)
hombres <- subset(colombia2015, sexo == "male")
pie(hombres$suici_no, hombres$edad)
ggplot(mujeres, aes(x=edad, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(hombres, aes(x=edad, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no)) +
geom_point()
ggplot(mujeres, aes(x=edad, y=suici_no)) +
geom_point() + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.2) labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.2) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.5) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.5) + labs(x = "Rango de edad", y = "Número de suicidios", size = "Suicidios por cada 100.000 hab")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.5) + labs(x = "Rango de edad", y = "Número de suicidios", size = "Suicidios cada 100.000 hab")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.5) + labs(x = "Rango de edad", y = "Número de suicidios", size = "Suicidios cada 100.000 hab")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.5) + labs(x = "Rango de edad", y = "Número de suicidios", size = "Suici 100.000 hab") +
scale_colour_continuous(guide = FALSE) +
xlab("weight of the diamond") +
labs( size = "Depth in %" ) +
theme_bw() +
theme(
text = element_text(size=20),
legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
panel.border = element_blank()
)
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.5) + labs(x = "Rango de edad", y = "Número de suicidios", size = "Suici 100.000 hab") +
scale_colour_continuous(guide = T) +
xlab("weight of the diamond") +
labs( size = "Depth in %" ) +
theme_bw() +
theme(
text = element_text(size=20),
legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
panel.border = element_blank()
)
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.5) + labs(x = "Rango de edad", y = "Número de suicidios") +
scale_size_continuous( trans="exp", range=c(4, 25)) +
scale_colour_continuous(guide = FALSE) +
xlab("weight of the diamond") +
labs( size = "Suicidios por %" ) +
theme_bw() +
theme(
text = element_text(size=20),
legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
panel.border = element_blank()
)
ggplot
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios") +
scale_size_continuous(trans="exp", range=c(4, 25)) +
scale_colour_continuous(guide = FALSE) +
xlab("weight of the diamond") +
labs( size = "Suicidios por %" ) +
theme_bw() +
theme(
text = element_text(size=20),
legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
panel.border = element_blank()
)
ggplot(mujeres, aes(x=edad, y=suici_no, size=suicirate, color=edad)) +
geom_point(alpha=0.4) +
scale_size_continuous( trans="exp", range=c(4, 25)) +
scale_colour_continuous(guide = FALSE) +
xlab("weight of the diamond") +
labs( size = "Depth in %" ) +
theme_bw() +
theme(
text = element_text(size=20),
legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
panel.border = element_blank()
)
dev.off()
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios") +
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios", size = "suicidio por cada 100.00 hab")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios", size = "suicidio x 100.00 hab")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios", size = "suici 100.00 hab")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios")
gplot(hombres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(hombres, aes(x=edad, y=suici_no, size= suicirate)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(hombres, aes(x=edad, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Rango de edad", y = "Número de suicidios")
View(hombres)
install.packages("latticeExtra")
View(varpib_suicides)
library(latticeExtra)
xyplot(varpib_suicides$varpib + varpib_suicides$suicitasa ~ varpib_suicides$año, type = "l")
# --> construct separate plots for each series
obj1 <- xyplot(varpib_suicides$varpib ~ varpib_suicides$año, varpib_suicides, type = "l" , lwd=2)
obj1 <- xyplot(varpib_suicides$suicitasa ~ varpib_suicides$año, varpib_suicides, type = "l" , lwd=2)
# --> Make the plot with second y axis:
doubleYScale(obj1, obj2, add.ylab2 = TRUE)
# --> construct separate plots for each series
obj1 <- xyplot(varpib_suicides$varpib ~ varpib_suicides$año, varpib_suicides, type = "l" , lwd=2)
obj2 <- xyplot(varpib_suicides$suicitasa ~ varpib_suicides$año, varpib_suicides, type = "l" , lwd=2)
# --> Make the plot with second y axis:
doubleYScale(obj1, obj2, add.ylab2 = TRUE)
## 3=== Same graph with a key legend
doubleYScale(obj1, obj2, text = c("obj1", "obj2") , add.ylab2 = TRUE)
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios")
library
library
library
library
library(readr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyverse)
library(ggplot2)
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.4) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.9) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(hombres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.9) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=generacion, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(hombres, aes(x=generacion, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Rango de edad", y = "Número de suicidios")
Millenials <- subset(colombia, generacion == "Millenials")
View(Millenials)
ggplot(Millenials, aes(x=edad, y=generacion)) + geom_bar(stat = "identity") +
labs(x = "Tipo de Generación", y = "Número de suicidios")
ggplot(Millenials, aes(x=edad, y=generacion)) + geom_bar(stat = "identity") +
labs(x = "", y = "Edad")
View(colombia)
gg <-lm(suici_no ~ Millenials, data = colombia)
colombia$Millenials <- ifelse(colombia$generacion == "Millenials", 1, 0)
gg <-lm(suici_no ~ Millenials, data = colombia)
summary(gg)
colombia1991 <- colombia[73,]
View(colombia1991)
colombia1991 <- colombia[73:,]
colombia1991 <- colombia[73:372,]
View(colombia1991)
colombia1991 <- colombia[73:372,]
colombia1991$Millenials <- ifelse(colombia1991$generacion == "Millenials", 1, 0)
gg <-lm(suici_no ~ Millenials, data = colombia1991)
summary(gg)
colombia1991 <- colombia[73:372,]
colombia1991$Millenials <- ifelse(colombia1991$generacion == "Millenials", 1, 0)
colombia1991$GenerationX <- ifelse(colombia1991$generacion == "Generation X", 1, 0)
gg <-lm(suicirate ~ Millenials + GenerationX, data = colombia1991)
summary(gg)
colombia$Millenials <- ifelse(colombia$generacion == "Millenials", 1, 0)
gg <-lm(suicirate ~ Millenials + GenerationX, data = colombia)
summary(gg)
colombia$Millenials <- ifelse(colombia$generacion == "Millenials", 1, 0)
gg <-lm(suicirate ~ Millenials + GenerationX, data = colombia)
gg <-lm(suicirate ~ Millenials, data = colombia)
summary(gg)
colombia$Millenials <- ifelse(colombia$generacion == "Millenials", 1, 0)
gg <-lm(suicirate ~ Millenials, data = colombia)
summary(gg)
colombia1991 <- colombia[73:372,]
colombia1991$Millenials <- ifelse(colombia1991$generacion == "Millenials", 1, 0)
gg <-lm(suicirate ~ Millenials, data = colombia1991)
summary(gg)
colombia1991 <- colombia[109:372,]
colombia1991$Millenials <- ifelse(colombia1991$generacion == "Millenials", 1, 0)
gg <-lm(suicirate ~ Millenials, data = colombia1991)
summary(gg)
gg <-lm(suici_no ~ Millenials, data = colombia1991)
summary(gg)
colombia1991 <- colombia[109:372,]
colombia1991$Millenials <- ifelse(colombia1991$generacion == "Millenials", 1, 0)
gg <-lm(suici_no ~ Millenials, data = colombia1991)
summary(gg)
colombia1991$GenerationX <- ifelse(colombia1991$generacion == "Generation X", 1, 0)
gg <-lm(suici_no ~ Millenials + GenerationX, data = colombia1991)
summary(gg)
plot(gg)
3
summary(gg)
gg <-lm(suici_no ~ Millenials + GenerationX + PIBper, data = colombia1991)
summary(gg)
colombia2000 <- colombia[109:372,]
colombia2000$Millenials <- ifelse(colombia2000$generacion == "Millenials", 1, 0)
colombia2000$GenerationX <- ifelse(colombia2000$generacion == "Generation X", 1, 0)
gg <-lm(suici_no ~ Millenials + GenerationX + PIBper, data = colombia2000)
summary(gg)
library(class)
library(psych)
View(colombia2000)
pairs.panels(colombia2000[c(4,9,11,12)])
View(colombia2015)
# Libraries
library(tidyverse)
# ----- This section prepare a dataframe for labels ---- #
# Get the name and the y position of each label
label_data=colombia2000
# calculate the ANGLE of the labels
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
angle= 90 - 360 * (label_data$generacion-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
angle= 90 - 360 * (label_data$suici_no-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
angle= 90 - 360 * (label_data$i_no-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
angle= 90 - 360 * (label_data$suici_no-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# Start the plot
p = ggplot(colombia2000, aes(x=generacion, y=suici_no)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity", fill=alpha("skyblue", 0.7)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(colombia2000=label_data, aes(x=generacion, y=suici_no+10, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
# Start the plot
p = ggplot(colombia2000, aes(x=generacion, y=suici_no)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(colombia2000=label_data, aes(x=generacion, y=suici_no+10, label=individual, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
# Start the plot
p = ggplot(colombia2000, aes(x=generacion, y=suici_no)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(colombia2000=label_data, aes(x=generacion, y=suici_no+10, label=generacion, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
# Start the plot
p = ggplot(colombia2000, aes(x=generacion, y=suici_no)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(colombia2000$generacion=label_data, aes(x=generacion, y=suici_no+10, label=generacion, hjust=hjust), color="black", fontface="bold",alpha=0.6, size=2.5, angle= label_data$angle, inherit.aes = FALSE )
rm(list = ls())
library(readr)
library(readr)
library(dplyr)
library(readxl)
library(lubridate)
library(tidyverse)
library(ggplot2)
pibper <- read_excel("C:/Users/acamp/Desktop/Semillero Datos/pibper.xlsx")
suicidios_total <- read_excel("C:/Users/acamp/Desktop/Semillero Datos/suicidios total.xlsx")
PIBsuici <- cbind.data.frame(pibper$pibper, suicidios_total$total_suici)
names(PIBsuici) <- c("pibper", "suici_to")
tiempo      <- seq(as.Date("1985/01/12"), as.Date("2015/01/12"), by = "1 year")
suicidios_total$año <- tiempo[1:dim(suicidios_total)[1]]
suicidios <- suicidios_total %>% select(año, total_suici)
suicidios %>% ggplot(aes(x = año, y = total_suici)) + geom_line(size = 1, color = "blue3") +
labs(title = "Total suicidios en Colombia",
x = "Tiempo",
y = "Total suicidios",
caption = "Fuente: World Health Organization")
pibper$Año <- tiempo[1:dim(pibper)[1]]
pibper <- pibper %>% select(Año, pibper)
pibper %>% ggplot(aes(x = Año, y = pibper)) + geom_line(size = 1, color = "aquamarine3") +
labs(title = "PIB per cápita",
x = "Tiempo",
y = "PIB per cápita (US$ a precios actuales)",
caption = "Fuente: World Bank")
varpibper <- read_excel("C:/Users/acamp/Desktop/Semillero Datos/varpibper.xlsx")
colombia <- read_excel("C:/Users/acamp/Desktop/Semillero Datos/colombia.xlsx")
varpib_suicides <- cbind.data.frame(varpibper$PIB, suicidios_total)
summary(varpib_suicides)
View(varpib_suicides)
names(varpib_suicides) <- c("varpib", "total_suici", "año", "poblacion", "suicitasa")
summary(varpib_suicides)
colombia2015 <- colombia[361:372,]
mujeres <- subset(colombia2015, sexo == "female")
pie(mujeres$suici_no, mujeres$edad)
View(mujeres)
View(mujeres)
hombres <- subset(colombia2015, sexo == "male")
pie(hombres$suici_no, hombres$edad)
View(hombres)
ggplot(mujeres, aes(x=edad, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(hombres, aes(x=edad, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Rango de edad", y = "Número de suicidios")
#------------------------------------------------------------------------------
ggplot(mujeres, aes(x=edad, y=suici_no)) +
geom_point() + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(mujeres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.9) + labs(x = "Rango de edad", y = "Número de suicidios")
ggplot(hombres, aes(x=edad, y=suici_no, size= suicirate, color = edad)) +
geom_point(alpha=0.9) + labs(x = "Rango de edad", y = "Número de suicidios")
library(latticeExtra)
xyplot(varpib_suicides$varpib + varpib_suicides$suicitasa ~ varpib_suicides$año, type = "l")
Variación_del_PIB <- varpib_suicides$varpib
Año <-  varpib_suicides$año
xyplot(Variación_del_PIB + varpib_suicides$suicitasa ~ Año, type = "l")
Tasa_suicidios <- varpib_suicides$suicitasa
xyplot(Variación_del_PIB + Tasa_suicidios ~ Año, type = "l")
# --> construct separate plots for each series
obj1 <- xyplot(varpib_suicides$varpib ~ varpib_suicides$año, varpib_suicides, type = "l" , lwd=2)
obj2 <- xyplot(varpib_suicides$suicitasa ~ varpib_suicides$año, varpib_suicides, type = "l" , lwd=2)
# --> Make the plot with second y axis:
doubleYScale(obj1, obj2, add.ylab2 = TRUE)
## 3=== Same graph with a key legend
doubleYScale(obj1, obj2, text = c("obj1", "obj2") , add.ylab2 = TRUE)
# --> Make the plot with second y axis:
doubleYScale(obj1, obj2, add.ylab2 = TRUE)
# --> construct separate plots for each series
obj1 <- xyplot(Variación_del_PIB ~ Año, varpib_suicides, type = "l" , lwd=2)
obj2 <- xyplot(Tasa_suicidios ~ Año, varpib_suicides, type = "l" , lwd=2)
# --> Make the plot with second y axis:
doubleYScale(obj1, obj2, add.ylab2 = TRUE)
ggplot(mujeres, aes(x=generacion, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Tipo de Generación", y = "Número de suicidios")
ggplot(hombres, aes(x=generacion, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Tipo de Generación", y = "Número de suicidios")
ggplot(hombres, aes(x=generacion, y=suici_no)) + geom_bar(stat = "identity") +
labs(x = "Tipo de Generación", y = "Número de suicidios")
Millenials <- subset(colombia, generacion == "Millenials")
ggplot(Millenials, aes(x=edad, y=generacion)) + geom_bar(stat = "identity") +
labs(x = "", y = "Edad")
colombia2000 <- colombia[109:372,]
colombia2000$Millenials <- ifelse(colombia2000$generacion == "Millenials", 1, 0)
colombia2000$GenerationX <- ifelse(colombia2000$generacion == "Generation X", 1, 0)
gg <-lm(suici_no ~ Millenials + GenerationX + PIBper, data = colombia2000)
summary(gg)
library(psych)
pairs.panels(colombia2000[c(4,9,11,12)])
View(colombia2000)
View(hombres)
View(mujeres)
mujeres <- cbind.data.frame(mujeres$suici_no, mujeres$generacion, mujeres$edad)
# Libraries
library(tidyverse)
label_data = mujeres
# calculate the ANGLE of the labels
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$suici_no-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 0)
# flip angle BY to make them readable
label_data$angle<-ifelse(angle < -90, angle+180, angle)
# calculate the alignment of labels: right or left
# If I am on the left part of the plot, my labels have currently an angle < -90
label_data$hjust<-ifelse( angle < -90, 1, 6)
# Start the plot
p = ggplot(mujeres, aes(x=generacion, y=suici_no)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(mujeres$generacion=label_data, aes(x=generacion, y=suici_no+10, label=generacion), color="black", fontface="bold",alpha=0.6, size=2.5, inherit.aes = FALSE )
# Start the plot
p = ggplot(mujeres, aes(x=generacion, y=suici_no)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(mujeres$`mujeres$generacion` =label_data, aes(x=generacion, y=suici_no+10, label=generacion), color="black", fontface="bold",alpha=0.6, size=2.5, inherit.aes = FALSE )
label_data = mujeres
# calculate the ANGLE of the labels
number_of_bar=nrow(label_data)
angle= 90 - 360 * (label_data$suici_no-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
# Start the plot
p = ggplot(mujeres, aes(x=generacion, y=suici_no)) +       # Note that id is a factor. If x is numeric, there is some space between the first bar
# This add the bars with a blue color
geom_bar(stat="identity") +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")      # Adjust the margin to make in sort labels are not truncated!
) +
# This makes the coordinate polar instead of cartesian.
coord_polar(start = 0) +
# Add the labels, using the label_data dataframe that we have created before
geom_text(mujeres$`mujeres$generacion` =label_data, aes(x=generacion, y=suici_no+10, label=generacion), color="black", fontface="bold",alpha=0.6, size=2.5, inherit.aes = FALSE )
View(suicidios)
View(varpib_suicides)
plot(varpib_suicides$suicitasa, type = "l")
plot(varpib_suicides$suicitasa, type = "l", main = "Suicidos por cada 100.000 habitantes")
plot(varpib_suicides$suicitasa, type = "l", main = "Suicidos por cada 100.000 habitantes", xlab = "Tiempo", ylab = "Tasa de suicidios" )
